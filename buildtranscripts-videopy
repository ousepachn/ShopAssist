import os
import time
import cv2
from openai import OpenAI 
import base64
import requests
import json

# from VectorizeDataset import Preprocessing
# from EmbedChunks import EmbedChunks
# from SaveData import SaveData
# use_serverless = True

SKIP_RATE = 30
GPT_ACCEPT_RATE = 12
os.getenv("OPENAI_API_KEY")
vid_name="2024-02-02_02-06-57_UTC"
PATH = "posts/"+vid_name+".mp4"  # vid1:2024-01-17_01-52-03_UTC
os.getenv("OPENAI_API_KEY")
Client=OpenAI()


video = cv2.VideoCapture(PATH)
base64Frames = []
i=0
while video.isOpened():
    success, frame = video.read()
    if not success:
        break
    if i%SKIP_RATE==0:
       cv2.imwrite("video-out/"+vid_name+"_f"+str(i).zfill(3)+".jpg", frame) 
    i+=1
    print(i)
    # _, buffer = cv2.imencode(".jpg", frame)
    # base64Frames.append(base64.b64encode(buffer).decode("utf-8"))
video.release()
api_key='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'
# Function to encode the image
def encode_image(image_path):
  with open(image_path, "rb") as image_file:
    return base64.b64encode(image_file.read()).decode('utf-8')

headers = {
  "Content-Type": "application/json",
  "Authorization": f"Bearer {api_key}"
}

payload = {
  "model": "gpt-4-vision-preview",
  "messages": [
    {
      "role": "user",
      "content": [
        {
          "type": "text",
          "text": "The below pictures are frames from a video sequence. Extract all text and product labels mentioned in the image. Describe all products along with color, material in 1-2 sentences. If something is not clear, do not make stuff up. products are mostly clothes and fashion accessroies."
        }
      ]
    }
  ],
  "max_tokens": 500
}


image_urls = []
for i, image in enumerate(os.listdir("video-out")):
    if vid_name in image:
        image_url = {
            "type": "image_url",
            "image_url": {
                "url": f"data:image/jpeg;base64,{encode_image(os.path.join('video-out',image))}"
            }
        }
        image_urls.append(image_url)
        print("file added: ",os.path.join('video-out', image))

payload["messages"][0]["content"].extend(image_urls)




response = requests.post("https://api.openai.com/v1/chat/completions", headers=headers, json=payload)
print(response.json()['choices'][0]['message']['content']) 









